@model MyMediaCatalog.Domain.StaffMember

@using (Ajax.BeginForm("AddPersonMedia", "Media", new AjaxOptions()
                                                                {
                                                                    HttpMethod = "POST",
                                                                    OnFailure = "onFailure()",
                                                                    InsertionMode = InsertionMode.Replace,
                                                                    UpdateTargetId = "mediaListView",
                                                                    OnSuccess = "onSuccess"
                                                                }, htmlAttributes: new { @class = "form-inline", id = "createMedia" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.PersonId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.MediaId, "Media", htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MediaId, null, "-- Select Media --", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MediaId, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, "Role", htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RoleId, null, "-- Select Role --", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <button type="submit" class="btn btn-default">Add Media</button>

}

<script type="text/javascript">
    function onSuccess() {
        $('form select').val(null);
        $('form input[type="text"]').val(null);
    }

</script>