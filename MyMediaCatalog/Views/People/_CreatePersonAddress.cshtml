@model MyMediaCatalog.Models.PersonAddressViewModel
           
@using (Ajax.BeginForm("CreateAddress", "Company", new AjaxOptions()
                                                                {
                                                                    HttpMethod = "POST",
                                                                    OnFailure = "onFailure()",
                                                                    InsertionMode = InsertionMode.Replace,
                                                                    UpdateTargetId = "addressListView",
                                                                    OnSuccess = "onSuccess"
                                                                }, htmlAttributes: new { @class = "form-inline", id = "createPhone" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.PersonId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    <div class="form-group">
        @Html.LabelFor(model => model.AddressTypeId, "Type", htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.AddressTypeId, null, "-- Select Type --", htmlAttributes: new { @class = "form-control"  })
            @Html.ValidationMessageFor(model => model.AddressTypeId, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @placeholder="Street" } })
            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Street2, htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Street2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street2" } })
            @Html.ValidationMessageFor(model => model.Street2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StateId, "Type", htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StateId, null, "-- Select State --", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Postal Code" } })
            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
        </div>
    </div>


    <button type="submit" class="btn btn-default">Add Address</button>

}

