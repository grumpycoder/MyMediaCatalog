@model MyMediaCatalog.Models.PersonAddressViewModel

@using (Ajax.BeginForm("CreateAddress", "Company", new AjaxOptions
{
                                                                    HttpMethod = "POST",
                                                                    OnFailure = "onFailure()",
                                                                    InsertionMode = InsertionMode.Replace,
                                                                    UpdateTargetId = "addressListView",
                                                                    OnSuccess = "onSuccess"
                                                                }, new { @class = "form-inline", id = "createPhone" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.PersonId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.AddressTypeId, "Type", new { @class = "sr-only" })
        <div class="col-md-10">
            @(Html.Kendo().DropDownListFor(m => m.AddressTypeId).Name("AddressTypeId").Text("Name").Value("Id").BindTo(ViewBag.AddressTypeId).OptionLabel("-- Select Type --"))
            @Html.ValidationMessageFor(model => model.AddressTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Street, new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Street, new { @class = "form-control k-textbox", @placeholder = "Street" })
            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Street2, new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Street2, new { @class = "form-control k-textbox", @placeholder = "Street2" })
            @Html.ValidationMessageFor(model => model.Street2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.City, new { @class = "form-control k-textbox", @placeholder = "City" })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StateId, "Type", new { @class = "sr-only" })
        <div class="col-md-10">
            @(Html.Kendo().DropDownListFor(m => m.StateId).Name("StateId").Text("Abbr").Value("Id").BindTo(ViewBag.StateId).OptionLabel("-- Select State --"))
            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostalCode, new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control k-textbox", @placeholder = "Postal Code" })
            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <button type="submit" class="btn btn-default">Add Address</button>

}

