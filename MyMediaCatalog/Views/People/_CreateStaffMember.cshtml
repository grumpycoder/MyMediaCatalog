@model StaffMemberViewModel

@using (Ajax.BeginForm("CreateStaffMember", "People", new AjaxOptions
{
                                                                    OnSuccess = "onSuccess",
                                                                    HttpMethod = "POST",
                                                                    InsertionMode = InsertionMode.Replace,
                                                                    UpdateTargetId = "staffListView"
                                                                }, new { @class = "form-inline", id = "createStaffMember" }))
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(m => m.MediaId)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, new { @class = "sr-only" })
        <div class="col-md-10">
            @(Html.Kendo().ComboBoxFor(m => m.PersonId).Name("PersonId").AutoBind(true).Placeholder("-- Select Person --")
                  .DataValueField("Id").DataTextField("FullName")
                  .Filter(FilterType.Contains)
                  .TemplateId("personTemplate")
                  .HighlightFirst(true)
                  .DataSource(src => src.Read("GetPersonList", "People").ServerFiltering(true)))

            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control k-textbox", @placeholder = "Title" })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, "Role", new { @class = "sr-only" })
        <div class="col-md-10">
            @(Html.Kendo().DropDownListFor(m => m.RoleId).BindTo(ViewBag.RoleId).Name("RoleId").Text("Name").Value("Id").OptionLabel("-- Select Role --"))
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <button type="submit" class="btn btn-default">Add Member</button>

}

<script id="personTemplate" type="text/x-kendo-template">
    <strong>#: FullName #</strong>
    <br />
    <small>#= Title != null ? Title : 'No Title' #</small>
</script>

<script>
    function onSuccess() {
        $.validator.unobtrusive.parse($(result));
    }
</script>