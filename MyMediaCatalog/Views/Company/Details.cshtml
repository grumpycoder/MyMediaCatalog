@model MyMediaCatalog.Domain.Company

@{
    ViewBag.Title = Model.Name;
}

<h2 id="header">@ViewBag.Title</h2>

<div>
    <hr />
    @using (Ajax.BeginForm("Edit", "Company", new AjaxOptions()
                                                                {
                                                                    HttpMethod = "POST",
                                                                    OnFailure = "onFailure",
                                                                    OnSuccess = "onSuccess"
                                                                }, htmlAttributes: new { @class = "form-inline" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(m => m.Id)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "sr-only" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeHolder = "First and Last Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <button type="submit" class="btn btn-default">Update Name</button>
    }

    <hr />
    <h4>Media</h4>
    <div class="well well-sm">
        @Html.Action("CreateNewMedia", "Media", new { @companyId = Model.Id })
    </div>
    <div id="mediaListView" style="overflow-x: hidden; overflow-y: auto;">
        @Html.Partial("../Media/_MediaListView", Model.Media)
    </div>

</div>
<p>
    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
</p>


<script type="text/javascript">
    function onSuccess() {
        $('#header').text($('#Name').val());
    }

</script>