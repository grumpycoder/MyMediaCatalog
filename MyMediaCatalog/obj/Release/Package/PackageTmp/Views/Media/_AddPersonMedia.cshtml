@model MyMediaCatalog.Domain.StaffMember

@using (Ajax.BeginForm("CreatePersonMedia", "Media", new AjaxOptions
{
                                                                    HttpMethod = "POST",
                                                                    OnFailure = "onFailure()",
                                                                    InsertionMode = InsertionMode.Replace,
                                                                    UpdateTargetId = "mediaListView",
                                                                    OnSuccess = "onSuccess"
                                                                }, new { @class = "form-inline", id = "createMedia" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.PersonId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.MediaId, "Media", new { @class = "sr-only" })
        <div class="col-md-10">
            @(Html.Kendo().ComboBoxFor(m => m.MediaId).Name("MediaId").DataTextField("Title").DataValueField("Id").Placeholder("-- Select Media --")
                  .DataSource(src => src.Read("GetMediaList", "Media").ServerFiltering(true)))

            @Html.ValidationMessageFor(model => model.MediaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, "Role", new { @class = "sr-only" })
        <div class="col-md-10">
            @(Html.Kendo().DropDownListFor(m => m.RoleId).Name("RoleId").Text("Name").Value("Id").BindTo(ViewBag.RoleId).OptionLabel("-- Select Role --"))
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <button type="submit" class="btn btn-default">Add Media</button>

}

<script type="text/javascript">
    function onSuccess() {
        $('form select').val(null);
        $('form input[type="text"]').val(null);
    }

</script>